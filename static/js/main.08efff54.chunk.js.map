{"version":3,"sources":["pages/Teambuilder/views.ts","atoms.ts","ui.ts","components/Navbar.tsx","components/SideNav.tsx","pages/Teambuilder/Home/Home.tsx","components/TeamCard.tsx","pages/Teambuilder/primaryViews/Teams.tsx","pages/Teambuilder/components/PokemonStage.tsx","pages/Teambuilder/primaryViews/Team.tsx","pages/Teambuilder/components/CurrentTeamNav.tsx","pages/Teambuilder/util.ts","pages/Teambuilder/components/PokemonItem.tsx","pages/Teambuilder/primaryViews/SearchPokemon.tsx","pages/Teambuilder/primaryViews/secondaryViews/SearchPokemon.tsx","pages/Teambuilder/components/MoveItem.tsx","pages/Teambuilder/primaryViews/secondaryViews/SelectMove.tsx","pages/Teambuilder/primaryViews/EditPokemon.tsx","pages/Teambuilder/Teambuilder.tsx","pages/Battle/Battle.tsx","api.ts","logic/StorageCacher.tsx","App.tsx","index.tsx"],"names":["ViewPrimary","ViewSecondary","currentView","atom","key","default","Teams","currentViewSecondary","Nothing","teams","JSON","parse","localStorage","getItem","currentTeamID","currentPokemonIndex","allPokemon","Map","allMoves","allItems","allAbilities","editPokemonInput","currentMoveIndex","Grid","styled","div","Heading","h1","Wrapper","Button","button","StyledLink","Link","Searchbar","input","Select","select","props","marginless","Navbar","nav","useRecoil","atoms","to","NavbarUI","Styling","SideNav","style","display","flexDirection","TeamCard","setCurrentView","setTeams","setCurrentTeamID","setCurrentPokemonIndex","team","id","className","margin","onClick","Team","name","title","SearchPokemon","val","filter","team2","setItem","stringify","pokemon","length","map","abstractPokemon","get","index","EditPokemon","src","sprite","alt","marginTop","marginBottom","prompt","size","PokemonStage","setCurrentViewSecondary","setInput","setCurrentMoveIndex","htmlFor","type","placeholder","Pokemon","onChange","e","target","value","i","actualName","moves","prettyName","Moves","currentTeam","find","cursor","CurrentTeamNav","children","abstractToDefaultConcrete","nickname","item","ability","uglyName","abilities","level","gender","nature","shiny","evs","stat","ivs","PokemonItem","newTeam","useState","height","overflow","Array","from","entries","includes","toLowerCase","MoveItem","move","currentPokemon","moveset","actual","pok","newArr","console","log","SelectMove","Stats","Items","Abilities","Misc","reduce","max","cur","selectedTeamID","setSelectedTeamID","Number","parseInt","getPokeAPIPokemon","a","axios","data","convertPokeAPIPokemonToTeambuilder","sprites","front_default","types","stats","base","base_stat","getTeambuilderPokemon","getRangeOfTeambuilderPokemon","startID","endID","promises","push","Promise","all","getPokeAPIMove","convertPokeAPIMoveToTeambuilder","names","damageClass","damage_class","accuracy","pp","description","flavor_text_entries","flavor_text","power","getTeambuilderMove","getRangeOfTeambuilderMoves","convertPokeAPIItemToTeambuilder","text","getPokeAPIItem","getTeambuilderItem","getRangeOfTeambuilderItems","convertPokeAPIAbilityToTeambuilder","getPokeAPIAbility","getTeambuilderAbility","getRangeOfTeambuilderAbilities","setAllPokemon","setAllMoves","setAllItems","setAllAbilities","useEffect","fetchPokemon","allPokemonMap","forEach","set","setTimeout","fetchMoves","allMovesMap","fetchItems","items","allItemsMap","fetchAbilities","allAbilitiesMap","io","connect","emit","GlobalStyles","createGlobalStyle","App","StorageCacher","exact","path","component","Home","Teambuilder","Battle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08efff54.chunk.js","sourcesContent":["export enum ViewPrimary {\r\n\tTeams,\r\n\tTeam,\r\n\tSearchPokemon,\r\n\tEditPokemon,\r\n\tSelectMove\r\n}\r\n\r\nexport enum ViewSecondary {\r\n\tNothing,\r\n\tMoves,\r\n\tPokemon,\r\n\tStats,\r\n\tItems,\r\n\tAbilities,\r\n\tMisc\r\n}\r\n","import { atom } from 'recoil'\nimport Teambuilder from './interfaces/Teambuilder'\nimport { ViewPrimary, ViewSecondary } from './pages/Teambuilder/views'\n\nexport default {\n\tcurrentView: atom({\n\t\tkey: 'teambuilder-currentView',\n\t\tdefault: ViewPrimary.Teams\n\t}),\n\n\tcurrentViewSecondary: atom({\n\t\tkey: 'teambuilder-currentViewSecondary',\n\t\tdefault: ViewSecondary.Nothing\n\t}),\n\n\tteams: atom({\n\t\tkey: 'teambuilder-teams',\n\t\tdefault: JSON.parse(localStorage.getItem('teams') ?? '[]') as Teambuilder.Team[]\n\t}),\n\n\tcurrentTeamID: atom({\n\t\tkey: 'teambuilder-currentTeamID',\n\t\tdefault: 0\n\t}),\n\n\tcurrentPokemonIndex: atom({\n\t\tkey: 'teambuilder-currentPokemonIndex',\n\t\tdefault: 0\n\t}),\n\n\tallPokemon: atom({\n\t\tkey: 'teambuilder-allPokemon',\n\t\tdefault:\n\t\t\tlocalStorage.getItem('allPokemon') !== null\n\t\t\t\t? new Map<string, Teambuilder.Pokemon.Abstract>(\n\t\t\t\t\t\tJSON.parse(localStorage.getItem('allPokemon') as string)\n\t\t\t\t  )\n\t\t\t\t: new Map<string, Teambuilder.Pokemon.Abstract>()\n\t}),\n\n\tallMoves: atom({\n\t\tkey: 'teambuilder-allMoves',\n\t\tdefault:\n\t\t\tlocalStorage.getItem('allMoves') !== null\n\t\t\t\t? new Map<string, Teambuilder.Move.Abstract>(JSON.parse(localStorage.getItem('allMoves') as string))\n\t\t\t\t: new Map<string, Teambuilder.Move.Abstract>()\n\t}),\n\n\tallItems: atom({\n\t\tkey: 'teambuilder-allItems',\n\t\tdefault:\n\t\t\tlocalStorage.getItem('allItems') !== null\n\t\t\t\t? new Map<string, Teambuilder.Item.Abstract>(JSON.parse(localStorage.getItem('allItems') as string))\n\t\t\t\t: new Map<string, Teambuilder.Item.Abstract>()\n\t}),\n\n\tallAbilities: atom({\n\t\tkey: 'teambuilder-allAbilities',\n\t\tdefault:\n\t\t\tlocalStorage.getItem('allAbilities') !== null\n\t\t\t\t? new Map<string, Teambuilder.Ability.Abstract>(\n\t\t\t\t\t\tJSON.parse(localStorage.getItem('allAbilities') as string)\n\t\t\t\t  )\n\t\t\t\t: new Map<string, Teambuilder.Ability.Abstract>()\n\t}),\n\n\teditPokemonInput: atom({\n\t\tkey: 'teambuilder-editPokemonInput',\n\t\tdefault: ''\n\t}),\n\n\tcurrentMoveIndex: atom({\n\t\tkey: 'teambuilder-currentMoveIndex',\n\t\tdefault: 0\n\t})\n}\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Grid = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 110px auto;\r\n`\r\n\r\nexport const Heading = styled.h1`\r\n\tfont-size: 38px;\r\n\tmargin: 15px 0;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n\tmargin: 0 60px 0 36px;\r\n`\r\n\r\nexport const Button = styled.button`\r\n\tbackground: var(--bg-main);\r\n\tborder: none;\r\n\tpadding: 5px 10px;\r\n\tcolor: white;\r\n\tfont-weight: 500;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n\tmargin: 15px 0;\r\n\tdisplay: block;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n\ttext-decoration: none;\r\n\tcolor: #000;\r\n`\r\n\r\nexport const Searchbar = styled.input`\r\n\tpadding: 10px;\r\n\twidth: 100%;\r\n\tborder-radius: 0;\r\n\tborder: solid 1px #ddd;\r\n\toutline: none;\r\n`\r\n\r\nexport const Select = styled.select<{ marginless?: boolean }>`\r\n\tpadding: 5px 10px;\r\n\tmin-width: 200px;\r\n\tmargin: ${props => (props.marginless ? '0' : '15px 0')};\r\n\r\n\toption {\r\n\t\tpadding: 10px;\r\n\t}\r\n`\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react'\r\nimport { useRecoilState as useRecoil } from 'recoil'\r\nimport atoms from '../atoms'\r\nimport styled from 'styled-components'\r\nimport { StyledLink } from '../ui'\r\n\r\nexport const Navbar = styled.nav`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\theight: 50px;\r\n\tbackground: var(--bg-main);\r\n\tjustify-content: space-between;\r\n\r\n\t${StyledLink} {\r\n\t\tdisplay: flex;\r\n\r\n\t\th1 {\r\n\t\t\tmargin: auto 15px;\r\n\t\t\tcolor: #fff;\r\n\t\t}\r\n\t}\r\n\r\n\tbutton {\r\n\t\twidth: 100px;\r\n\t\tfont-size: 18px;\r\n\t\tcursor: pointer;\r\n\t}\r\n`\r\n\r\ninterface Props {}\r\n\r\nexport default (props: Props) => {\r\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\r\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\r\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\r\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\r\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\r\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\r\n\r\n\treturn (\r\n\t\t<Navbar>\r\n\t\t\t<StyledLink to='/'>\r\n\t\t\t\t<h1>Pokemon Battle Simulator</h1>\r\n\t\t\t</StyledLink>\r\n\t\t</Navbar>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst NavbarUI = styled.nav`\r\n\tbackground: var(--bg-secondary);\r\n\theight: 93vh;\r\n\tmin-height: 100%;\r\n\tmax-height: 100vh;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: sticky;\r\n\ttop: 0;\r\n\tleft: 0;\r\n`\r\n\r\ninterface Props {}\r\n\r\nexport default (props: Props) => {\r\n\treturn <NavbarUI></NavbarUI>\r\n}\r\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Navbar from '../../../components/Navbar'\nimport SideNav from '../../../components/SideNav'\nimport { Heading, Wrapper, StyledLink, Grid } from '../../../ui'\n\nconst Styling = styled.div``\n\ninterface RouteParams {}\n\ninterface Props extends RouteComponentProps<RouteParams> {}\n\nexport default (props: Props) => {\n\treturn (\n\t\t<Styling>\n\t\t\t<Navbar />\n\t\t\t<Grid>\n\t\t\t\t<SideNav />\n\t\t\t\t<Wrapper>\n\t\t\t\t\t<Heading>Home</Heading>\n\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'column' }}>\n\t\t\t\t\t\t<StyledLink to='/battle'>Battle</StyledLink>\n\t\t\t\t\t\t<StyledLink to='/teambuilder'>Teambuilder</StyledLink>\n\t\t\t\t\t</div>\n\t\t\t\t</Wrapper>\n\t\t\t</Grid>\n\t\t</Styling>\n\t)\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react'\r\nimport Teambuilder from '../interfaces/Teambuilder'\r\nimport styled from 'styled-components'\r\nimport { ViewPrimary } from '../pages/Teambuilder/views'\r\nimport { useRecoilState as useRecoil } from 'recoil'\r\nimport atoms from '../atoms'\r\nimport { StyledLink } from '../ui'\r\n\r\nconst TeamCard = styled.div`\r\n\tborder: solid 1px #ddd;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: black;\r\n\r\n\t.top {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\r\n\t\th2 {\r\n\t\t\t&:hover {\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.icons {\r\n\t\t\tdisplay: flex;\r\n\r\n\t\t\ti {\r\n\t\t\t\tmargin: auto 15px auto 0;\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tul {\r\n\t\tlist-style: none;\r\n\t\tdisplay: flex;\r\n\r\n\t\tli {\r\n\t\t\tpadding: 10px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-transform: capitalize;\r\n\r\n\t\t\t&:hover {\r\n\t\t\t\tcursor: pointer;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tp.fallback {\r\n\t\tmargin: 0px 0px 15px 15px;\r\n\t}\r\n`\r\n\r\ninterface Props {\r\n\tteam: Teambuilder.Team\r\n}\r\n\r\nexport default (props: Props) => {\r\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\r\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\r\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\r\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\r\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\r\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\r\n\r\n\tconst { team } = props\r\n\r\n\treturn (\r\n\t\t<StyledLink to='/teambuilder'>\r\n\t\t\t<TeamCard key={team.id}>\r\n\t\t\t\t<div className='top'>\r\n\t\t\t\t\t<h2\r\n\t\t\t\t\t\tstyle={{ margin: '15px 0 0 15px' }}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetCurrentTeamID(team.id)\r\n\t\t\t\t\t\t\tsetCurrentView(ViewPrimary.Team)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{team.name}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<div className='icons'>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\ttitle={`Add member to ${team.name}`}\r\n\t\t\t\t\t\t\tclassName='fa fa-plus'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetCurrentTeamID(team.id)\r\n\t\t\t\t\t\t\t\tsetCurrentView(ViewPrimary.SearchPokemon)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\ttitle={`Delete ${team.name}`}\r\n\t\t\t\t\t\t\tclassName='fa fa-trash'\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetTeams(teams => {\r\n\t\t\t\t\t\t\t\t\tconst val = teams.filter(team2 => team2.id !== team.id)\r\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('teams', JSON.stringify(val))\r\n\t\t\t\t\t\t\t\t\treturn val\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{team.pokemon.length > 0 ? (\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{team.pokemon.map(pokemon => {\r\n\t\t\t\t\t\t\tconst abstractPokemon = allPokemon.get(pokemon.name) as Teambuilder.Pokemon.Abstract\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetCurrentTeamID(team.id)\r\n\t\t\t\t\t\t\t\t\t\tsetCurrentPokemonIndex(pokemon.index)\r\n\t\t\t\t\t\t\t\t\t\tsetCurrentView(ViewPrimary.EditPokemon)\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\tkey={pokemon.index}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img src={abstractPokemon.sprite} alt={pokemon.name} />\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p className='fallback'>This team has no Pokemon!</p>\r\n\t\t\t\t)}\r\n\t\t\t</TeamCard>\r\n\t\t</StyledLink>\r\n\t)\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react'\nimport { useRecoilState as useRecoil } from 'recoil'\nimport { Button, Wrapper, Heading, StyledLink } from '../../../ui'\nimport atoms from '../../../atoms'\nimport TeamCard from '../../../components/TeamCard'\n\ninterface Props {}\n\nexport default (props: Props) => {\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\n\n\treturn (\n\t\t<>\n\t\t\t<Wrapper>\n\t\t\t\t<StyledLink to='/'>\n\t\t\t\t\t<Button style={{ marginTop: '15px' }}>Back</Button>\n\t\t\t\t</StyledLink>\n\t\t\t\t<Heading>Teambuilder</Heading>\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ marginBottom: '15px' }}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetTeams(teams => {\n\t\t\t\t\t\t\tconst val = [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tname: prompt('Enter a team name') || 'Untitled',\n\t\t\t\t\t\t\t\t\tpokemon: [],\n\t\t\t\t\t\t\t\t\tid: teams.length\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...teams\n\t\t\t\t\t\t\t]\n\n\t\t\t\t\t\t\tlocalStorage.setItem('teams', JSON.stringify(val))\n\n\t\t\t\t\t\t\treturn val\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tAdd new team\n\t\t\t\t</Button>\n\t\t\t\t<div style={{ marginBottom: '20px' }}>\n\t\t\t\t\t{teams.length > 0 && allPokemon.size > 0 ? (\n\t\t\t\t\t\tteams.map(team => <TeamCard team={team} key={team.id} />)\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>You have no teams!</p>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Wrapper>\n\t\t</>\n\t)\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useState } from 'react'\r\nimport Teambuilder from '../../../interfaces/Teambuilder'\r\nimport { ViewPrimary, ViewSecondary } from '../views'\r\nimport { useRecoilState as useRecoil } from 'recoil'\r\nimport styled from 'styled-components'\r\nimport atoms from '../../../atoms'\r\n\r\nconst PokemonStage = styled.div`\r\n\tdisplay: flex;\r\n\theight: 155px;\r\n\tpadding-top: 15px;\r\n\tborder: solid 1px #ddd;\r\n\r\n\tdiv {\r\n\t\tmargin-right: 8px;\r\n\t}\r\n\r\n\t.form-control {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\r\n\t\tlabel {\r\n\t\t\tfont-weight: 500;\r\n\t\t}\r\n\r\n\t\tinput {\r\n\t\t\tmargin-top: 3px;\r\n\t\t\tpadding: 1px 3px;\r\n\t\t}\r\n\t}\r\n\r\n\t.pokemon-img {\r\n\t\tmargin: -13px 0;\r\n\t\tmargin-left: 20px;\r\n\t\tmargin-right: 15px;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\twidth: 100px;\r\n\t\theight: 100px;\r\n\t}\r\n`\r\n\r\ninterface Props {\r\n\tpokemon: Teambuilder.Pokemon.Concrete\r\n}\r\n\r\nexport default (props: Props) => {\r\n\tconst { pokemon } = props\r\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\r\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\r\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\r\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\r\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\r\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\r\n\tconst [currentViewSecondary, setCurrentViewSecondary] = useRecoil(atoms.currentViewSecondary)\r\n\tconst [input, setInput] = useRecoil(atoms.editPokemonInput)\r\n\tconst [currentMoveIndex, setCurrentMoveIndex] = useRecoil(atoms.currentMoveIndex)\r\n\r\n\tconst abstractPokemon = allPokemon.get(pokemon.name) as Teambuilder.Pokemon.Abstract\r\n\r\n\treturn (\r\n\t\t<PokemonStage>\r\n\t\t\t<div className='pokemon-img'>\r\n\t\t\t\t<img src={abstractPokemon.sprite} alt={pokemon.name} />\r\n\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t<label htmlFor=''>Pokemon</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder={pokemon.name}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetCurrentView(ViewPrimary.EditPokemon)\r\n\t\t\t\t\t\t\tsetCurrentViewSecondary(ViewSecondary.Pokemon)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\t\t\t\t\t\tsetInput(e.target.value)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='details'>\r\n\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t<label htmlFor=''>Item</label>\r\n\t\t\t\t\t<input type='text' />\r\n\t\t\t\t\t<label htmlFor=''>Ability</label>\r\n\t\t\t\t\t<input type='text' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='moves'>\r\n\t\t\t\t<div className='form-control'>\r\n\t\t\t\t\t<label htmlFor=''>Moves</label>\r\n\t\t\t\t\t{[0, 1, 2, 3].map(i => {\r\n\t\t\t\t\t\tconst actualName = allMoves.get(pokemon.moves[i]?.name)?.prettyName\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tplaceholder={actualName || ''}\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tsetCurrentMoveIndex(i)\r\n\t\t\t\t\t\t\t\t\tsetCurrentView(ViewPrimary.EditPokemon)\r\n\t\t\t\t\t\t\t\t\tsetCurrentViewSecondary(ViewSecondary.Moves)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\tsetInput(e.target.value)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</PokemonStage>\r\n\t)\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react'\nimport { useRecoilState as useRecoil } from 'recoil'\nimport { ViewPrimary } from '../views'\nimport atoms from '../../../atoms'\nimport PokemonStage from '../components/PokemonStage'\nimport { Wrapper, Button, Heading } from '../../../ui'\nimport Teambuilder from '../../../interfaces/Teambuilder'\n\ninterface Props {}\n\nexport default (props: Props) => {\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\n\n\tconst currentTeam = teams.find(team => team.id === currentTeamID) as Teambuilder.Team\n\n\treturn (\n\t\t<>\n\t\t\t<Wrapper>\n\t\t\t\t<Button onClick={() => setCurrentView(ViewPrimary.Teams)}>Back</Button>\n\t\t\t\t<Heading>{currentTeam.name}</Heading>\n\t\t\t\t{currentTeam.pokemon.length < 6 ? (\n\t\t\t\t\t<Button onClick={() => setCurrentView(ViewPrimary.SearchPokemon)}>Add new Pokemon</Button>\n\t\t\t\t) : (\n\t\t\t\t\t<></>\n\t\t\t\t)}\n\t\t\t\t<div style={{ marginBottom: '20px' }}>\n\t\t\t\t\t{currentTeam.pokemon.length > 0 ? (\n\t\t\t\t\t\tcurrentTeam.pokemon.map(pokemon => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetCurrentPokemonIndex(pokemon.index)\n\t\t\t\t\t\t\t\t\tsetCurrentView(ViewPrimary.EditPokemon)\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<PokemonStage pokemon={pokemon} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p>This team has no Pokemon!</p>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</Wrapper>\n\t\t</>\n\t)\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react'\r\nimport { useRecoilState as useRecoil } from 'recoil'\r\nimport { ViewPrimary } from '../views'\r\nimport atoms from '../../../atoms'\r\nimport styled from 'styled-components'\r\nimport Teambuilder from '../../../interfaces/Teambuilder'\r\n\r\nconst CurrentTeamNav = styled.nav`\r\n\tdisplay: flex;\r\n\tborder-bottom: solid 1px #ddd;\r\n\theight: 90px;\r\n\r\n\tbutton {\r\n\t\tmargin: auto 25px;\r\n\t}\r\n\r\n\tul {\r\n\t\tdisplay: flex;\r\n\t\tlist-style: none;\r\n\r\n\t\tli {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tpadding: 5px 10px;\r\n\t\t\tborder-left: solid #ccc 1px;\r\n\t\t\tcursor: pointer;\r\n\r\n\t\t\t&:nth-last-of-type(1) {\r\n\t\t\t\tborder-right: solid #ccc 1px;\r\n\t\t\t\twidth: 85px;\r\n\r\n\t\t\t\ti {\r\n\t\t\t\t\tmargin: auto;\r\n\t\t\t\t\ttransform: scale(1.1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\timg {\r\n\t\t\t\tmargin: auto;\r\n\t\t\t\twidth: 50px;\r\n\t\t\t}\r\n\r\n\t\t\tp {\r\n\t\t\t\ttext-transform: capitalize;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`\r\n\r\ninterface Props {\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nexport default (props: Props) => {\r\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\r\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\r\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\r\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\r\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\r\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\r\n\tconst [currentViewSecondary, setCurrentViewSecondary] = useRecoil(atoms.currentViewSecondary)\r\n\r\n\tconst currentTeam = teams.find(team => team.id === currentTeamID) as Teambuilder.Team\r\n\r\n\treturn (\r\n\t\t<CurrentTeamNav>\r\n\t\t\t{props.children}\r\n\t\t\t<ul>\r\n\t\t\t\t{currentTeam.pokemon.map(pokemon => {\r\n\t\t\t\t\tconst abstractPokemon = allPokemon.get(pokemon.name) as Teambuilder.Pokemon.Abstract\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tkey={pokemon.index}\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetCurrentPokemonIndex(pokemon.index)\r\n\t\t\t\t\t\t\t\tsetCurrentView(ViewPrimary.EditPokemon)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img src={abstractPokemon.sprite} alt={pokemon.name} />\r\n\t\t\t\t\t\t\t<p>{pokemon.name}</p>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t\t{currentTeam.pokemon.length < 6 ? (\r\n\t\t\t\t\t<li\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetCurrentView(ViewPrimary.SearchPokemon)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className='fa fa-plus'></i>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<></>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</CurrentTeamNav>\r\n\t)\r\n}\r\n","import Teambuilder from '../../interfaces/Teambuilder'\r\n\r\nexport const abstractToDefaultConcrete = (\r\n\tpokemon: Teambuilder.Pokemon.Abstract,\r\n\tindex: number\r\n): Teambuilder.Pokemon.Concrete => {\r\n\tconst { name } = pokemon\r\n\r\n\treturn {\r\n\t\tname,\r\n\t\tindex,\r\n\t\tmoves: [],\r\n\t\tnickname: null,\r\n\t\titem: null,\r\n\t\tability: { uglyName: pokemon.abilities[0] },\r\n\t\tlevel: 100,\r\n\t\tgender: 'male',\r\n\t\tnature: 'serious',\r\n\t\tshiny: false,\r\n\t\tevs: [\r\n\t\t\t{ stat: 'hp', value: 0 },\r\n\t\t\t{ stat: 'attack', value: 0 },\r\n\t\t\t{ stat: 'defense', value: 0 },\r\n\t\t\t{ stat: 'specialAttack', value: 0 },\r\n\t\t\t{ stat: 'specialDefense', value: 0 },\r\n\t\t\t{ stat: 'speed', value: 0 }\r\n\t\t],\r\n\t\tivs: [\r\n\t\t\t{ stat: 'hp', value: 31 },\r\n\t\t\t{ stat: 'attack', value: 31 },\r\n\t\t\t{ stat: 'defense', value: 31 },\r\n\t\t\t{ stat: 'specialAttack', value: 31 },\r\n\t\t\t{ stat: 'specialDefense', value: 31 },\r\n\t\t\t{ stat: 'speed', value: 31 }\r\n\t\t]\r\n\t}\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react'\r\nimport atoms from '../../../atoms'\r\nimport styled from 'styled-components'\r\nimport { useRecoilState as useRecoil } from 'recoil'\r\nimport Teambuilder from '../../../interfaces/Teambuilder'\r\nimport { ViewPrimary } from '../views'\r\nimport { abstractToDefaultConcrete } from '../util'\r\n\r\nconst PokemonItem = styled.div`\r\n\tdisplay: flex;\r\n\tpadding: 10px;\r\n\tborder: solid 1px #ddd;\r\n\tcursor: pointer;\r\n\r\n\timg {\r\n\t\twidth: 70px;\r\n\t\tmargin: auto 0;\r\n\t}\r\n\r\n\tp {\r\n\t\ttext-transform: capitalize;\r\n\t\tmargin: auto 0 auto 15px;\r\n\t}\r\n`\r\n\r\ninterface Props {\r\n\tpokemon: Teambuilder.Pokemon.Abstract\r\n}\r\n\r\nexport default (props: Props) => {\r\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\r\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\r\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\r\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\r\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\r\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\r\n\r\n\tconst currentTeam = teams.find(team => team.id === currentTeamID) as Teambuilder.Team\r\n\r\n\tconst { pokemon } = props\r\n\r\n\tconst setCurrentTeam = (newTeam: Teambuilder.Team) => {\r\n\t\tsetTeams(teams => {\r\n\t\t\tconst val = teams.map(team => {\r\n\t\t\t\tif (team.id === newTeam.id) {\r\n\t\t\t\t\treturn newTeam\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn team\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlocalStorage.setItem('teams', JSON.stringify(val))\r\n\r\n\t\t\treturn val\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<PokemonItem\r\n\t\t\tkey={pokemon.id}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetCurrentTeam({\r\n\t\t\t\t\t...currentTeam,\r\n\t\t\t\t\tpokemon: [...currentTeam.pokemon, abstractToDefaultConcrete(pokemon, currentTeam.pokemon.length)]\r\n\t\t\t\t})\r\n\t\t\t\tsetCurrentPokemonIndex(currentTeam.pokemon.length)\r\n\t\t\t\tsetCurrentView(ViewPrimary.EditPokemon)\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<img src={pokemon.sprite} alt={pokemon.name} />\r\n\t\t\t<p>{pokemon.name}</p>\r\n\t\t</PokemonItem>\r\n\t)\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react'\nimport { useRecoilState as useRecoil } from 'recoil'\nimport { ViewPrimary } from '../views'\nimport atoms from '../../../atoms'\nimport CurrentTeamNav from '../components/CurrentTeamNav'\nimport { Searchbar, Button } from '../../../ui'\nimport PokemonItem from '../components/PokemonItem'\nimport Teambuilder from '../../../interfaces/Teambuilder'\n\ninterface Props {}\n\nexport default (props: Props) => {\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\n\n\tconst [input, setInput] = useState<string>('')\n\n\tconst currentTeam = teams.find(team => team.id === currentTeamID) as Teambuilder.Team\n\n\treturn (\n\t\t<>\n\t\t\t<CurrentTeamNav>\n\t\t\t\t<Button onClick={() => setCurrentView(ViewPrimary.Team)}>Back</Button>\n\t\t\t</CurrentTeamNav>\n\t\t\t<Searchbar\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Search for a Pokemon'\n\t\t\t\tonChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\t\t\tsetInput(e.target.value)\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<div style={{ height: '600px', overflow: 'scroll' }}>\n\t\t\t\t{Array.from(allPokemon.entries()).map(([name, pokemon]) =>\n\t\t\t\t\tpokemon.name.includes(input.toLowerCase()) ? (\n\t\t\t\t\t\t<PokemonItem pokemon={pokemon} key={pokemon.id} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from 'react'\nimport { useRecoilState as useRecoil } from 'recoil'\nimport atoms from '../../../../atoms'\nimport PokemonItem from '../../components/PokemonItem'\nimport Teambuilder from '../../../../interfaces/Teambuilder'\n\ninterface Props {}\n\nexport default (props: Props) => {\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\n\tconst [input, setInput] = useRecoil(atoms.editPokemonInput)\n\n\tconst currentTeam = teams.find(team => team.id === currentTeamID) as Teambuilder.Team\n\n\treturn (\n\t\t<>\n\t\t\t<div style={{ height: '395px', overflow: 'scroll' }}>\n\t\t\t\t{Array.from(allPokemon.entries()).map(([name, pokemon]) =>\n\t\t\t\t\tpokemon.name.includes(input.toLowerCase()) ? (\n\t\t\t\t\t\t<PokemonItem pokemon={pokemon} key={pokemon.id} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<></>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Teambuilder from '../../../interfaces/Teambuilder'\r\n\r\nconst MoveItem = styled.div`\r\n\tdisplay: flex;\r\n\tpadding: 10px;\r\n\tborder: solid 1px #ddd;\r\n\tcursor: pointer;\r\n\r\n\timg {\r\n\t\twidth: 70px;\r\n\t\tmargin: auto 0;\r\n\t}\r\n\r\n\tp {\r\n\t\ttext-transform: capitalize;\r\n\t\tmargin: auto 0 auto 15px;\r\n\t}\r\n`\r\n\r\ninterface Props {\r\n\tmove: Teambuilder.Move.Abstract\r\n}\r\n\r\nexport default (props: Props) => {\r\n\tconst { move } = props\r\n\r\n\treturn (\r\n\t\t<MoveItem key={move.uglyName}>\r\n\t\t\t<p>{move.prettyName}</p>\r\n\t\t</MoveItem>\r\n\t)\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React from 'react'\r\nimport { useRecoilState as useRecoil } from 'recoil'\r\nimport atoms from '../../../../atoms'\r\nimport MoveItem from '../../components/MoveItem'\r\nimport Teambuilder from '../../../../interfaces/Teambuilder'\r\nimport { ViewSecondary } from '../../views'\r\n\r\ninterface Props {}\r\n\r\nexport default (props: Props) => {\r\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\r\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\r\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\r\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\r\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\r\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\r\n\tconst [input, setInput] = useRecoil(atoms.editPokemonInput)\r\n\tconst [currentMoveIndex, setCurrentMoveIndex] = useRecoil(atoms.currentMoveIndex)\r\n\tconst [currentViewSecondary, setCurrentViewSecondary] = useRecoil(atoms.currentViewSecondary)\r\n\r\n\tconst currentTeam = teams.find(team => team.id === currentTeamID) as Teambuilder.Team\r\n\r\n\tconst currentPokemon = currentTeam.pokemon.find(\r\n\t\tpokemon => pokemon.index === currentPokemonIndex\r\n\t) as Teambuilder.Pokemon.Concrete\r\n\r\n\tconst moveset =\r\n\t\tallPokemon.size > 0\r\n\t\t\t? (allPokemon.get(currentPokemon.name) as Teambuilder.Pokemon.Abstract).moveset\r\n\t\t\t: ([] as string[])\r\n\r\n\tconst setCurrentPokemon = (pok: Teambuilder.Pokemon.Concrete) => {\r\n\t\tsetTeams(teams => {\r\n\t\t\tconst val = teams.map(team => {\r\n\t\t\t\tif (team.id === currentTeamID) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...team,\r\n\t\t\t\t\t\tpokemon: team.pokemon.map(pokemon => {\r\n\t\t\t\t\t\t\tif (pokemon.index === currentPokemonIndex) {\r\n\t\t\t\t\t\t\t\treturn pok\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn pokemon\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn team\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlocalStorage.setItem('teams', JSON.stringify(val))\r\n\r\n\t\t\treturn val\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ height: '395px', overflow: 'scroll' }}>\r\n\t\t\t\t{moveset.map(move => {\r\n\t\t\t\t\tconst actual = allMoves.get(move) as Teambuilder.Move.Abstract\r\n\r\n\t\t\t\t\treturn actual.prettyName.toLowerCase().includes(input.toLowerCase()) ? (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tconst newArr = [...currentPokemon.moves]\r\n\t\t\t\t\t\t\t\tnewArr[currentMoveIndex] = { name: move }\r\n\r\n\t\t\t\t\t\t\t\tconsole.log({\r\n\t\t\t\t\t\t\t\t\t...currentPokemon,\r\n\t\t\t\t\t\t\t\t\tmoves: currentPokemon.moves.map((move, i) =>\r\n\t\t\t\t\t\t\t\t\t\ti !== currentMoveIndex\r\n\t\t\t\t\t\t\t\t\t\t\t? move\r\n\t\t\t\t\t\t\t\t\t\t\t: ({ name: move.name } as Teambuilder.Move.Concrete)\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tsetCurrentPokemon({\r\n\t\t\t\t\t\t\t\t\t...currentPokemon,\r\n\t\t\t\t\t\t\t\t\tmoves: newArr\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tsetCurrentViewSecondary(ViewSecondary.Nothing)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MoveItem move={actual} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<></>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react'\nimport { useRecoilState as useRecoil } from 'recoil'\nimport { ViewPrimary, ViewSecondary } from '../views'\nimport atoms from '../../../atoms'\nimport Teambuilder from '../../../interfaces/Teambuilder'\nimport CurrentTeamNav from '../components/CurrentTeamNav'\nimport PokemonStage from '../components/PokemonStage'\nimport { Button } from '../../../ui'\nimport SearchPokemon from './secondaryViews/SearchPokemon'\nimport SelectMove from './secondaryViews/SelectMove'\n\ninterface Props {}\n\nexport default (props: Props) => {\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\n\n\tconst [currentViewSecondary, setCurrentViewSecondary] = useRecoil(atoms.currentViewSecondary)\n\n\tconst currentTeam = teams.find(team => team.id === currentTeamID) as Teambuilder.Team\n\n\tconst currentPokemon = currentTeam.pokemon.find(\n\t\tpokemon => pokemon.index === currentPokemonIndex\n\t) as Teambuilder.Pokemon.Concrete\n\n\tconst setCurrentPokemon = (pok: Teambuilder.Pokemon.Concrete) => {\n\t\tsetTeams(teams => {\n\t\t\tconst val = teams.map(team => {\n\t\t\t\tif (team.id === currentTeamID) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...team,\n\t\t\t\t\t\tpokemon: team.pokemon.map(pokemon => {\n\t\t\t\t\t\t\tif (pokemon.index === currentPokemonIndex) {\n\t\t\t\t\t\t\t\treturn pok\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn pokemon\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn team\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlocalStorage.setItem('teams', JSON.stringify(val))\n\n\t\t\treturn val\n\t\t})\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<CurrentTeamNav>\n\t\t\t\t<Button onClick={() => setCurrentView(ViewPrimary.Team)}>Back</Button>\n\t\t\t</CurrentTeamNav>\n\t\t\t<PokemonStage pokemon={currentPokemon} />\n\t\t\t{(() => {\n\t\t\t\tswitch (currentViewSecondary) {\n\t\t\t\t\tcase ViewSecondary.Nothing:\n\t\t\t\t\t\treturn <p style={{ margin: '10px' }}>Click a text field to edit the Pokemon!</p>\n\t\t\t\t\tcase ViewSecondary.Moves:\n\t\t\t\t\t\treturn <SelectMove />\n\t\t\t\t\tcase ViewSecondary.Pokemon:\n\t\t\t\t\t\treturn <SearchPokemon />\n\t\t\t\t\tcase ViewSecondary.Stats:\n\t\t\t\t\t\treturn 3\n\t\t\t\t\tcase ViewSecondary.Items:\n\t\t\t\t\t\treturn 4\n\t\t\t\t\tcase ViewSecondary.Abilities:\n\t\t\t\t\t\treturn 5\n\t\t\t\t\tcase ViewSecondary.Misc:\n\t\t\t\t\t\treturn 6\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn <h1>Error: Unhandled Secondary View</h1>\n\t\t\t\t}\n\t\t\t})()}\n\t\t</>\n\t)\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useRecoilState as useRecoil } from 'recoil'\nimport atoms from '../../atoms'\nimport Teams from './primaryViews/Teams'\nimport Team from './primaryViews/Team'\nimport SearchPokemon from './primaryViews/SearchPokemon'\nimport EditPokemon from './primaryViews/EditPokemon'\nimport SideNav from '../../components/SideNav'\nimport Navbar from '../../components/Navbar'\nimport { ViewPrimary } from './views'\nimport { Grid } from '../../ui'\n\ninterface RouteParams {}\n\ninterface Props extends RouteComponentProps<RouteParams> {}\n\nexport default (props: Props) => {\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\n\tconst [allItems, setAllItems] = useRecoil(atoms.allItems)\n\tconst [allAbilities, setAllAbilities] = useRecoil(atoms.allAbilities)\n\n\treturn (\n\t\t<>\n\t\t\t<Navbar />\n\t\t\t<Grid>\n\t\t\t\t<SideNav />\n\t\t\t\t<div>\n\t\t\t\t\t{((): JSX.Element => {\n\t\t\t\t\t\tswitch (currentView) {\n\t\t\t\t\t\t\tcase ViewPrimary.Teams:\n\t\t\t\t\t\t\t\treturn <Teams />\n\t\t\t\t\t\t\tcase ViewPrimary.Team:\n\t\t\t\t\t\t\t\treturn <Team />\n\t\t\t\t\t\t\tcase ViewPrimary.EditPokemon:\n\t\t\t\t\t\t\t\treturn <EditPokemon />\n\t\t\t\t\t\t\tcase ViewPrimary.SearchPokemon:\n\t\t\t\t\t\t\t\treturn <SearchPokemon />\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\treturn <h1>Error: Unhandled Primary View</h1>\n\t\t\t\t\t\t}\n\t\t\t\t\t})()}\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t</>\n\t)\n}\n","import React, { useState } from 'react'\r\nimport Navbar from '../../components/Navbar'\r\nimport { Wrapper, Heading, Select, Button, StyledLink } from '../../ui'\r\nimport { useRecoilState as useRecoil } from 'recoil'\r\nimport atoms from '../../atoms'\r\nimport TeamCard from '../../components/TeamCard'\r\nimport Teambuilder from '../../interfaces/Teambuilder'\r\nimport SideNav from '../../components/SideNav'\r\nimport { Grid } from '../../ui'\r\n\r\ninterface Props {}\r\n\r\nexport default (props: Props) => {\r\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\r\n\tconst [selectedTeamID, setSelectedTeamID] = useState<number>(\r\n\t\tteams.map(team => team.id).reduce((max, cur) => (cur > max ? cur : max), 0)\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Grid>\r\n\t\t\t\t<SideNav />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Wrapper>\r\n\t\t\t\t\t\t<StyledLink to='/'>\r\n\t\t\t\t\t\t\t<Button>Back</Button>\r\n\t\t\t\t\t\t</StyledLink>\r\n\t\t\t\t\t\t<p>(Battle isn't functional yet! Project shown is front end only so far)</p>\r\n\t\t\t\t\t\t{teams.length > 0 ? (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Heading>Pick a team</Heading>\r\n\t\t\t\t\t\t\t\t<Button>Search for games</Button>\r\n\t\t\t\t\t\t\t\t{teams.length > 1 ? (\r\n\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\tmarginless\r\n\t\t\t\t\t\t\t\t\t\tonChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\r\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedTeamID(Number.parseInt(e.target.value))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{teams.map(team => (\r\n\t\t\t\t\t\t\t\t\t\t\t<option value={team.id}>{team.name}</option>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t<div style={{ marginTop: '15px' }}>\r\n\t\t\t\t\t\t\t\t\t<TeamCard\r\n\t\t\t\t\t\t\t\t\t\tteam={teams.find(team => team.id === selectedTeamID) as Teambuilder.Team}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Heading>You have no teams!</Heading>\r\n\t\t\t\t\t\t\t\t<StyledLink to='/teambuilder'>\r\n\t\t\t\t\t\t\t\t\t<Button>Make some here!</Button>\r\n\t\t\t\t\t\t\t\t</StyledLink>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Wrapper>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\t)\r\n}\r\n","import Teambuilder from './interfaces/Teambuilder'\nimport PokeAPI from './interfaces/PokeAPI'\nimport axios from 'axios'\n\n// POKEMON\n\nexport const getPokeAPIPokemon = async (id: number): Promise<PokeAPI.Pokemon> => {\n\treturn (await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)).data as PokeAPI.Pokemon\n}\n\nexport const convertPokeAPIPokemonToTeambuilder = (data: PokeAPI.Pokemon): Teambuilder.Pokemon.Abstract => {\n\treturn {\n\t\tname: data.name,\n\t\tid: data.id,\n\t\tsprite: data.sprites.front_default,\n\t\ttypes: data.types.map(type => type.type.name),\n\t\tabilities: data.abilities.map(ability => ability.ability.name),\n\t\tindex: null,\n\t\tmoveset: data.moves.map(move => move.move.name),\n\t\tstats: data.stats.map(stat => ({\n\t\t\tname: stat.stat.name,\n\t\t\tbase: stat.base_stat\n\t\t}))\n\t} as Teambuilder.Pokemon.Abstract\n}\n\nexport const getTeambuilderPokemon = async (id: number): Promise<Teambuilder.Pokemon.Abstract> => {\n\tconst data = await getPokeAPIPokemon(id)\n\treturn convertPokeAPIPokemonToTeambuilder(data)\n}\n\nexport const getRangeOfTeambuilderPokemon = async (\n\tstartID: number,\n\tendID: number\n): Promise<Teambuilder.Pokemon.Abstract[]> => {\n\tconst promises: Promise<Teambuilder.Pokemon.Abstract>[] = []\n\n\tfor (let id = startID; id <= endID; id++) {\n\t\tpromises.push(getTeambuilderPokemon(id))\n\t}\n\n\treturn await Promise.all(promises)\n}\n\n// MOVES\n\nexport const getPokeAPIMove = async (id: string | number): Promise<PokeAPI.Move> => {\n\treturn (await axios.get(`https://pokeapi.co/api/v2/move/${id}`)).data as PokeAPI.Move\n}\n\nexport const convertPokeAPIMoveToTeambuilder = (data: PokeAPI.Move): Teambuilder.Move.Abstract => {\n\treturn {\n\t\tprettyName: data.names[7].name,\n\t\tuglyName: data.name,\n\t\ttype: data.type.name,\n\t\tdamageClass: data.damage_class.name,\n\t\taccuracy: data.accuracy,\n\t\tpp: data.pp,\n\t\tdescription: data.flavor_text_entries[0].flavor_text,\n\t\tpower: data.power\n\t} as Teambuilder.Move.Abstract\n}\n\nexport const getTeambuilderMove = async (id: string | number): Promise<Teambuilder.Move.Abstract> => {\n\tconst data = await getPokeAPIMove(id)\n\treturn convertPokeAPIMoveToTeambuilder(data)\n}\n\nexport const getRangeOfTeambuilderMoves = async (\n\tstartID: number,\n\tendID: number\n): Promise<Teambuilder.Move.Abstract[]> => {\n\tconst promises: Promise<Teambuilder.Move.Abstract>[] = []\n\n\tfor (let id = startID; id <= endID; id++) {\n\t\tpromises.push(getTeambuilderMove(id))\n\t}\n\n\treturn await Promise.all(promises)\n}\n\n// ITEMS\n\nexport const convertPokeAPIItemToTeambuilder = (data: PokeAPI.Item): Teambuilder.Item.Abstract => {\n\treturn {\n\t\tsprite: data.sprites.default,\n\t\tprettyName: data.names[5].name,\n\t\tuglyName: data.name,\n\t\tdescription: data.flavor_text_entries[0].text\n\t} as Teambuilder.Item.Abstract\n}\n\nexport const getPokeAPIItem = async (id: number): Promise<PokeAPI.Item> => {\n\treturn (await axios.get(`https://pokeapi.co/api/v2/item/${id}`)).data as PokeAPI.Item\n}\n\nexport const getTeambuilderItem = async (id: number): Promise<Teambuilder.Item.Abstract> => {\n\tconst data = await getPokeAPIItem(id)\n\treturn convertPokeAPIItemToTeambuilder(data)\n}\n\nexport const getRangeOfTeambuilderItems = async (\n\tstartID: number,\n\tendID: number\n): Promise<Teambuilder.Item.Abstract[]> => {\n\tconst promises: Promise<Teambuilder.Item.Abstract>[] = []\n\n\tfor (let id = startID; id <= endID; id++) {\n\t\tpromises.push(getTeambuilderItem(id))\n\t}\n\n\treturn await Promise.all(promises)\n}\n\n// Abilities\n\nexport const convertPokeAPIAbilityToTeambuilder = (data: PokeAPI.Ability): Teambuilder.Ability.Abstract => {\n\treturn {\n\t\tprettyName: data.names[5].name,\n\t\tuglyName: data.name,\n\t\tdescription: data.flavor_text_entries[0].flavor_text\n\t} as Teambuilder.Ability.Abstract\n}\n\nexport const getPokeAPIAbility = async (id: number): Promise<PokeAPI.Ability> => {\n\treturn (await axios.get(`https://pokeapi.co/api/v2/ability/${id}`)).data as PokeAPI.Ability\n}\n\nexport const getTeambuilderAbility = async (id: number): Promise<Teambuilder.Ability.Abstract> => {\n\tconst data = await getPokeAPIAbility(id)\n\treturn convertPokeAPIAbilityToTeambuilder(data)\n}\n\nexport const getRangeOfTeambuilderAbilities = async (\n\tstartID: number,\n\tendID: number\n): Promise<Teambuilder.Ability.Abstract[]> => {\n\tconst promises: Promise<Teambuilder.Ability.Abstract>[] = []\n\n\tfor (let id = startID; id <= endID; id++) {\n\t\tpromises.push(getTeambuilderAbility(id))\n\t}\n\n\treturn await Promise.all(promises)\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport React, { useEffect } from 'react'\r\nimport { useRecoilState as useRecoil } from 'recoil'\r\nimport atoms from '../atoms'\r\nimport Teambuilder from '../interfaces/Teambuilder'\r\nimport {\r\n\tgetRangeOfTeambuilderPokemon,\r\n\tgetRangeOfTeambuilderMoves,\r\n\tgetRangeOfTeambuilderItems,\r\n\tgetRangeOfTeambuilderAbilities\r\n} from '../api'\r\n\r\ninterface Props {}\r\n\r\nexport default (props: Props) => {\r\n\tconst [currentView, setCurrentView] = useRecoil(atoms.currentView)\r\n\tconst [teams, setTeams] = useRecoil(atoms.teams)\r\n\tconst [currentTeamID, setCurrentTeamID] = useRecoil(atoms.currentTeamID)\r\n\tconst [currentPokemonIndex, setCurrentPokemonIndex] = useRecoil(atoms.currentPokemonIndex)\r\n\tconst [allPokemon, setAllPokemon] = useRecoil(atoms.allPokemon)\r\n\tconst [allMoves, setAllMoves] = useRecoil(atoms.allMoves)\r\n\tconst [allItems, setAllItems] = useRecoil(atoms.allItems)\r\n\tconst [allAbilities, setAllAbilities] = useRecoil(atoms.allAbilities)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allPokemon.size === 0) {\r\n\t\t\tconst fetchPokemon = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconsole.log('Fetching Pokemon')\r\n\t\t\t\t\tconst allPokemonMap = new Map<string, Teambuilder.Pokemon.Abstract>()\r\n\r\n\t\t\t\t\tconst pokemon = await getRangeOfTeambuilderPokemon(1, 100)\r\n\t\t\t\t\tpokemon.forEach(pokemon => allPokemonMap.set(pokemon.name, pokemon))\r\n\t\t\t\t\tlocalStorage.setItem('allPokemon', JSON.stringify(Array.from(allPokemonMap.entries())))\r\n\t\t\t\t\tsetAllPokemon(allPokemonMap)\r\n\r\n\t\t\t\t\tconsole.log('Finished fetching Pokemon', allPokemonMap)\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tsetTimeout(1000, fetchPokemon)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchPokemon()\r\n\t\t} else {\r\n\t\t\tconsole.log('Cached Pokemon', allPokemon)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allMoves.size === 0) {\r\n\t\t\tconst fetchMoves = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconsole.log('Fetching moves.')\r\n\r\n\t\t\t\t\tconst moves = await getRangeOfTeambuilderMoves(1, 728)\r\n\t\t\t\t\tconst allMovesMap = new Map<string, Teambuilder.Move.Abstract>()\r\n\r\n\t\t\t\t\tmoves.forEach(move => allMovesMap.set(move.uglyName, move))\r\n\r\n\t\t\t\t\tlocalStorage.setItem('allMoves', JSON.stringify(Array.from(allMovesMap.entries())))\r\n\t\t\t\t\tsetAllMoves(allMovesMap)\r\n\r\n\t\t\t\t\tconsole.log('Finished fetching moves', allMovesMap)\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tsetTimeout(2000, fetchMoves)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchMoves()\r\n\t\t} else {\r\n\t\t\tconsole.log('Cached Moves', allMoves)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allItems.size === 0) {\r\n\t\t\tconst fetchItems = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconsole.log('Fetching items.')\r\n\r\n\t\t\t\t\tconst items = await getRangeOfTeambuilderItems(1, 50)\r\n\t\t\t\t\tconst allItemsMap = new Map<string, Teambuilder.Item.Abstract>()\r\n\r\n\t\t\t\t\titems.forEach(item => allItemsMap.set(item.uglyName, item))\r\n\r\n\t\t\t\t\tlocalStorage.setItem('allItems', JSON.stringify(Array.from(allItemsMap.entries())))\r\n\t\t\t\t\tsetAllItems(allItemsMap)\r\n\r\n\t\t\t\t\tconsole.log('Finished fetching items', allItemsMap)\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tsetTimeout(4000, fetchItems)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchItems()\r\n\t\t} else {\r\n\t\t\tconsole.log('Cached Items', allItems)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (allAbilities.size === 0) {\r\n\t\t\tconst fetchAbilities = async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconsole.log('Fetching abilities.')\r\n\r\n\t\t\t\t\tconst abilities = await getRangeOfTeambuilderAbilities(1, 233)\r\n\t\t\t\t\tconst allAbilitiesMap = new Map<string, Teambuilder.Ability.Abstract>()\r\n\r\n\t\t\t\t\tabilities.forEach(ability => allAbilitiesMap.set(ability.uglyName, ability))\r\n\r\n\t\t\t\t\tlocalStorage.setItem('allAbilities', JSON.stringify(Array.from(allAbilitiesMap.entries())))\r\n\t\t\t\t\tsetAllAbilities(allAbilitiesMap)\r\n\r\n\t\t\t\t\tconsole.log('Finished fetching abilities', allAbilitiesMap)\r\n\t\t\t\t} catch {\r\n\t\t\t\t\tsetTimeout(4000, fetchAbilities)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfetchAbilities()\r\n\t\t} else {\r\n\t\t\tconsole.log('Cached Abilities', allAbilities)\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn <></>\r\n}\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react'\nimport io from 'socket.io-client'\nimport { createGlobalStyle } from 'styled-components'\nimport { RecoilRoot } from 'recoil'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Home from './pages/Teambuilder/Home/Home'\nimport Teambuilder from './pages/Teambuilder/Teambuilder'\nimport Battle from './pages/Battle/Battle'\nimport StorageCacher from './logic/StorageCacher'\n\nconst socket = io.connect('http://localhost:4000')\nsocket.emit('msg', 'hello world!')\n\nconst themes = {\n\tblue: 'linear-gradient(-135deg, #02e6ee, #1f3cce)',\n\tpurple: 'linear-gradient(-135deg, #c850c0, #4158d0)',\n\tred: 'linear-gradient(-135deg, #f45c43, #eb3349)'\n}\n\nconst GlobalStyles = createGlobalStyle`\n\t:root {\n\t\t--bg-main: ${themes.red};\n\t\t--bg-secondary: linear-gradient(-135deg, #333, #444);\n\t}\n\n\t* {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tbox-sizing: border-box;\n\t\tfont-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n\t}\n`\n\nconst App = () => {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<RecoilRoot>\n\t\t\t\t<GlobalStyles />\n\t\t\t\t<StorageCacher />\n\t\t\t\t<Route exact path='/' component={Home} />\n\t\t\t\t<Route exact path='/teambuilder' component={Teambuilder} />\n\t\t\t\t<Route exact path='/battle' component={Battle} />\n\t\t\t</RecoilRoot>\n\t\t</BrowserRouter>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}